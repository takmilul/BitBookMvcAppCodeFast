//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BitBookMvcApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BitBookMVCAppDBEntities : DbContext
    {
        public BitBookMVCAppDBEntities()
            : base("name=BitBookMVCAppDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddComment(Nullable<int> postId, string comment, Nullable<System.DateTime> time, Nullable<int> whoCommentedId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.DateTime));
    
            var whoCommentedIdParameter = whoCommentedId.HasValue ?
                new ObjectParameter("WhoCommentedId", whoCommentedId) :
                new ObjectParameter("WhoCommentedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddComment", postIdParameter, commentParameter, timeParameter, whoCommentedIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddEducation(string institute, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> hasDegree, string degree, Nullable<int> userId)
        {
            var instituteParameter = institute != null ?
                new ObjectParameter("Institute", institute) :
                new ObjectParameter("Institute", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var hasDegreeParameter = hasDegree.HasValue ?
                new ObjectParameter("HasDegree", hasDegree) :
                new ObjectParameter("HasDegree", typeof(bool));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddEducation", instituteParameter, fromDateParameter, toDateParameter, hasDegreeParameter, degreeParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddFamilyMember(Nullable<int> familyMemberId, string relationship, Nullable<int> userId)
        {
            var familyMemberIdParameter = familyMemberId.HasValue ?
                new ObjectParameter("FamilyMemberId", familyMemberId) :
                new ObjectParameter("FamilyMemberId", typeof(int));
    
            var relationshipParameter = relationship != null ?
                new ObjectParameter("Relationship", relationship) :
                new ObjectParameter("Relationship", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddFamilyMember", familyMemberIdParameter, relationshipParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddInterest(string interestedIn, Nullable<int> userId)
        {
            var interestedInParameter = interestedIn != null ?
                new ObjectParameter("InterestedIn", interestedIn) :
                new ObjectParameter("InterestedIn", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddInterest", interestedInParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddMobileNo(string mobileNo, Nullable<int> userId)
        {
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddMobileNo", mobileNoParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddPost(string post, string picUrl, Nullable<bool> isText, Nullable<bool> isPic, Nullable<System.DateTime> date, Nullable<int> userId)
        {
            var postParameter = post != null ?
                new ObjectParameter("Post", post) :
                new ObjectParameter("Post", typeof(string));
    
            var picUrlParameter = picUrl != null ?
                new ObjectParameter("PicUrl", picUrl) :
                new ObjectParameter("PicUrl", typeof(string));
    
            var isTextParameter = isText.HasValue ?
                new ObjectParameter("IsText", isText) :
                new ObjectParameter("IsText", typeof(bool));
    
            var isPicParameter = isPic.HasValue ?
                new ObjectParameter("IsPic", isPic) :
                new ObjectParameter("IsPic", typeof(bool));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddPost", postParameter, picUrlParameter, isTextParameter, isPicParameter, dateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddProfessionalSkill(string skill, Nullable<int> userId)
        {
            var skillParameter = skill != null ?
                new ObjectParameter("Skill", skill) :
                new ObjectParameter("Skill", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddProfessionalSkill", skillParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_AddWork(string company, string position, string description, string city, string country, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> userId)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_AddWork", companyParameter, positionParameter, descriptionParameter, cityParameter, countryParameter, fromDateParameter, toDateParameter, userIdParameter);
        }
    
        public virtual ObjectResult<SP_GetFriendRequestList_Result> SP_GetFriendRequestList(Nullable<int> receiverId, Nullable<bool> isAccepted)
        {
            var receiverIdParameter = receiverId.HasValue ?
                new ObjectParameter("ReceiverId", receiverId) :
                new ObjectParameter("ReceiverId", typeof(int));
    
            var isAcceptedParameter = isAccepted.HasValue ?
                new ObjectParameter("IsAccepted", isAccepted) :
                new ObjectParameter("IsAccepted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFriendRequestList_Result>("SP_GetFriendRequestList", receiverIdParameter, isAcceptedParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SP_InsertUser(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SP_InsertUser", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_SendFriendRequestList_Result> SP_SendFriendRequestList(Nullable<int> senderId, Nullable<bool> isAccepted)
        {
            var senderIdParameter = senderId.HasValue ?
                new ObjectParameter("SenderId", senderId) :
                new ObjectParameter("SenderId", typeof(int));
    
            var isAcceptedParameter = isAccepted.HasValue ?
                new ObjectParameter("IsAccepted", isAccepted) :
                new ObjectParameter("IsAccepted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SendFriendRequestList_Result>("SP_SendFriendRequestList", senderIdParameter, isAcceptedParameter);
        }
    
        public virtual ObjectResult<SP_ShowFriendList_Result> SP_ShowFriendList(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ShowFriendList_Result>("SP_ShowFriendList", userIdParameter);
        }
    
        public virtual ObjectResult<SP_ViewLikeList_Result> SP_ViewLikeList(Nullable<int> postId)
        {
            var postIdParameter = postId.HasValue ?
                new ObjectParameter("PostId", postId) :
                new ObjectParameter("PostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ViewLikeList_Result>("SP_ViewLikeList", postIdParameter);
        }
    }
}
